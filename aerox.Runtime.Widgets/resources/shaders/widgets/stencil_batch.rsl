#include "utils.rsl"

struct StencilClip
{
    mat3 transform;
    float2 size;
};

layout(set = 0,binding = 0, scalar) uniform stencil_info {
    mat4 projection;
    StencilClip quads[12];
};

@Vertex {
    layout(location = 0) out int oQuadIndex;

    void main()
    {
        float2 dummyUV = float2(0.0);

        int index = gl_VertexIndex;
        int vertexIndex = int(mod(index, 6));
        int quadIndex = int(floor(index / 6));
        StencilClip renderInfo = stencil_info.quads[quadIndex];
        generateRectVertex(renderInfo.size, stencil_info.projection, renderInfo.transform, vertexIndex, gl_Position, dummyUV);
        oQuadIndex = quadIndex;
    }
}

@Fragment {
    layout (location = 0,$flat) in int iQuadIndex;
    layout (location = 0) out float4 oColor;

    void main() {
        StencilClip renderInfo = stencil_info.quads[iQuadIndex];
        float4 result = applyBorderRadius(gl_FragCoord.xy,float4(float3(0.0),1.0), float4(0.0f), renderInfo.size, renderInfo.transform);
        if(result.w > 0.5){
            discard;
        }
        oColor = float4(0.0f);//float4(float3(result.w),1.0);
    }
}